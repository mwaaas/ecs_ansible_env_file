{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "def template",
  "Parameters": {
    "ClusterStackName": {
      "Description": "Name of the ECS cluster that this service should run on",
      "Type": "String"
    },
    "Domain": {
      "Description": "dns domain",
      "Type": "String"
    },
    "ClusterAlbStackName": {
      "Description": "ecs cluster alb stack name",
      "Type": "String"
    },
    "ImageTag": {
      "Description": "Description",
      "Type": "String"
    },
    "ContainerTaskRole": {
      "Type": "String"
    }
  },
  "Resources": {
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-VPC"
          }
        },
        "Port": 80,
        "Protocol": "HTTP",
        "Matcher": {
          "HttpCode": "200-299"
        },
        "HealthCheckIntervalSeconds": 300,
        "HealthCheckPath": "/health",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 60,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 10,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 60
          }
        ]
      }
    },
    "ListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "ListenerArn": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-LoadBalancerListener"
          }
        },
        "Priority": 19,
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              {
                "Ref": "Domain"
              }
            ]
          }
        ],
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            },
            "Type": "forward"
          }
        ]
      }
    },
    "DnsRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": "mwaside.com.",
        "Comment": "ALB CNAME for stack latest",
        "Name": {
          "Ref": "Domain"
        },
        "Type": "CNAME",
        "TTL": "60",
        "ResourceRecords": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${ClusterStackName}-LoadBalancerDNSName"
            }
          }
        ]
      }
    },
    "Service": {
      "Type": "AWS::ECS::Service",
      "DependsOn": [
        "ListenerRule",
        "TaskDefinition"
      ],
      "Properties": {
        "Cluster": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-Cluster"
          }
        },
        "Role": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-ServiceRole"
          }
        },
        "DesiredCount": 1,
        "TaskDefinition": {
          "Ref": "TaskDefinition"
        },
        "LoadBalancers": [
          {
            "ContainerName": "foo",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ]
      }
    },
    "TaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family": {
          "Ref": "AWS::StackName"
        },
        "TaskRoleArn": {
          "Ref": "ContainerTaskRole"
        },
        "ContainerDefinitions": [
          {
            "Name": "foo",
            "Image": {
              "Fn::Sub": "mwaaas/mwaside:${ImageTag}"
            },
            "MemoryReservation": 1024,
            "Essential": "true",
            "PortMappings": [
              {
                "ContainerPort": 8080
              }
            ],
            "Environment": [

            ],
            "LogConfiguration": {
              "LogDriver": "json-file"
            }
          },
          {
            "Name": "bar",
            "Image": {
              "Fn::Sub": "mwaaas/mwaside:${ImageTag}"
            },
            "MemoryReservation": 1024,
            "Essential": "true",
            "PortMappings": [
              {
                "ContainerPort": 8082
              }
            ],
            "LogConfiguration": {
              "LogDriver": "json-file"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "DnsRecord": {
      "Description": "A reference to the stack's dns record",
      "Value": {
        "Ref": "DnsRecord"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DnsRecord"
        }
      }
    },
    "TaskDefinition": {
      "Description": "A reference to the stack's app taskdef",
      "Value": {
        "Ref": "TaskDefinition"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-TaskDef"
        }
      }
    },
    "Service": {
      "Description": "A reference to the stack's app service",
      "Value": {
        "Ref": "Service"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service"
        }
      }
    }
  }
}